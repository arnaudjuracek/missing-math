function n(n,t,r){return Math.max(t,Math.min(n,r))}function t(n,r,o){return n>o?n%o:n<r?t(n+o,r,o):n}function r(n,t,r,u){return void 0===u&&(u=!1),o(n,t,r,0,1,u)}function o(t,r,o,u,a,i){void 0===i&&(i=!1);var c=(t-r)*(a-u)/(o-r)+u;return i?n(c,u,a):c}function u(n,t,r){return n+r*(t-n)}function a(n,t,r){var o=(1-r)*Math.sin(n)+r*Math.sin(t),u=(1-r)*Math.cos(n)+r*Math.cos(t);return Math.atan2(o,u)}function i(n,t,r){return void 0===r&&(r=Math.random),void 0!==t?u(n,t,r()):u(0,n,r())}function c(n,t,r){return void 0===r&&(r=Math.random),Math.floor(i(n,t,r))}function e(n){return 180*n/Math.PI}function f(n){return n*Math.PI/180}function h(n,t){return Math.ceil(n/t)*t}function M(n,t){return Math.round(n/t)*t}function d(n,t){return Math.floor(n/t)*t}function v(n,t){var r=n-Math.floor(n);return t?+r.toFixed(t):r}export{n as clamp,t as wrap,r as normalize,o as map,u as lerp,a as lerpRadians,i as random,c as randomInt,e as degrees,f as radians,h as ceilTo,M as roundTo,d as floorTo,v as fract};
//# sourceMappingURL=missing-math.m.js.map
