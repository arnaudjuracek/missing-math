{"version":3,"file":"missing-math.m.js","sources":["../src/index.js"],"sourcesContent":["'use strict'\n\nexport function clamp (a, min, max) {\n  return Math.max(min, Math.min(a, max))\n}\n\nexport function wrap (a, min, max) {\n  if (a > max) return a % max\n  if (a < min) return wrap(a + max, min, max)\n  return a\n}\n\nexport function normalize (a, min, max, clamped = false) {\n  return map(a, min, max, 0, 1, clamped)\n}\n\nexport function map (a, inMin, inMax, outMin, outMax, clamped = false) {\n  const result = (a - inMin) * (outMax - outMin) / (inMax - inMin) + outMin\n  return clamped ? clamp(result, outMin, outMax) : result\n}\n\nexport function lerp (a, b, t) {\n  return a + t * (b - a)\n}\n\nexport function lerpRadians (a, b, t){\n  const sn = (1 - t) * Math.sin(a) + t * Math.sin(b)\n  const cs = (1 - t) * Math.cos(a) + t * Math.cos(b)\n  return Math.atan2(sn, cs)\n}\n\nexport function random (a, b, rng = Math.random) {\n  if (b !== undefined) return lerp(a, b, rng())\n  return lerp(0, a, rng())\n}\n\nexport function randomInt (a, b, rng = Math.random) {\n  return Math.floor(random(a, b, rng))\n}\n\nexport function degrees (rad) {\n  return rad * 180 / Math.PI\n}\n\nexport function radians (deg) {\n  return deg * Math.PI / 180\n}\n\nexport function ceilTo (value, nearest) {\n  return Math.ceil(value / nearest) * nearest\n}\n\nexport function roundTo (value, nearest) {\n  return Math.round(value / nearest) * nearest\n}\n\nexport function floorTo (value, nearest) {\n  return Math.floor(value / nearest) * nearest\n}\n\nexport function fract (value, decimals) {\n  const fractionalPart = value - Math.floor(value)\n  return decimals\n    ? +(fractionalPart).toFixed(decimals)\n    : fractionalPart\n}\n"],"names":["clamp","a","min","max","Math","wrap","normalize","clamped","map","inMin","inMax","outMin","outMax","result","lerp","b","t","lerpRadians","sn","sin","cs","cos","atan2","random","rng","undefined","randomInt","floor","degrees","rad","PI","radians","deg","ceilTo","value","nearest","ceil","roundTo","round","floorTo","fract","decimals","fractionalPart","toFixed"],"mappings":"AAEO,SAASA,EAAOC,EAAGC,EAAKC,UACtBC,KAAKD,IAAID,EAAKE,KAAKF,IAAID,EAAGE,IAGnC,SAAgBE,EAAMJ,EAAGC,EAAKC,UACxBF,EAAIE,EAAYF,EAAIE,EACpBF,EAAIC,EAAYG,EAAKJ,EAAIE,EAAKD,EAAKC,GAChCF,EAGT,SAAgBK,EAAWL,EAAGC,EAAKC,EAAKI,0BAAU,GACzCC,EAAIP,EAAGC,EAAKC,EAAK,EAAG,EAAGI,GAGzB,SAASC,EAAKP,EAAGQ,EAAOC,EAAOC,EAAQC,EAAQL,mBAAU,OACxDM,GAAUZ,EAAIQ,IAAUG,EAASD,IAAWD,EAAQD,GAASE,SAC5DJ,EAAUP,EAAMa,EAAQF,EAAQC,GAAUC,EAGnD,SAAgBC,EAAMb,EAAGc,EAAGC,UACnBf,EAAIe,GAAKD,EAAId,GAGtB,SAAgBgB,EAAahB,EAAGc,EAAGC,OAC3BE,GAAM,EAAIF,GAAKZ,KAAKe,IAAIlB,GAAKe,EAAIZ,KAAKe,IAAIJ,GAC1CK,GAAM,EAAIJ,GAAKZ,KAAKiB,IAAIpB,GAAKe,EAAIZ,KAAKiB,IAAIN,UACzCX,KAAKkB,MAAMJ,EAAIE,GAGxB,SAAgBG,EAAQtB,EAAGc,EAAGS,yBAAMpB,KAAKmB,aAC7BE,IAANV,EAAwBD,EAAKb,EAAGc,EAAGS,KAChCV,EAAK,EAAGb,EAAGuB,KAGpB,SAAgBE,EAAWzB,EAAGc,EAAGS,yBAAMpB,KAAKmB,QACnCnB,KAAKuB,MAAMJ,EAAOtB,EAAGc,EAAGS,IAG1B,SAASI,EAASC,UACV,IAANA,EAAYzB,KAAK0B,GAGnB,SAASC,EAASC,UAChBA,EAAM5B,KAAK0B,GAAK,IAGlB,SAASG,EAAQC,EAAOC,UACtB/B,KAAKgC,KAAKF,EAAQC,GAAWA,EAG/B,SAASE,EAASH,EAAOC,UACvB/B,KAAKkC,MAAMJ,EAAQC,GAAWA,EAGhC,SAASI,EAASL,EAAOC,UACvB/B,KAAKuB,MAAMO,EAAQC,GAAWA,EAGhC,SAASK,EAAON,EAAOO,OACtBC,EAAiBR,EAAQ9B,KAAKuB,MAAMO,UACnCO,GACDC,EAAgBC,QAAQF,GAC1BC"}